#!/bin/bash

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
. $DIR/panel_colors

TEMPERATURE_THRESHOLD=60

num_mon=$(bspc query -M | wc -l)

while read -r line ; do
	case $line in
		M*)
			line_out=$(echo $line | cut -c 4-)
			case $line in
				Mpl*)
					music="%{F$COLOR_MUSIC_PLAYING_FG}%{B$COLOR_MUSIC_PLAYING_BG} ${line_out} %{B-}%{F-}"
				;;
				Mpa*)
					music="%{F$COLOR_MUSIC_PAUSED_FG}%{B$COLOR_MUSIC_PAUSED_BG} ${line_out} %{B-}%{F-}"
				;;
				*)
					music="%{F$COLOR_MUSIC_STOPPED_FG}%{B$COLOR_MUSIC_STOPPED_BG}%{B-}%{F-}"
				;;
			esac
			;;
		P*)
			package_count=$(echo $line | cut -c 3-)
			case $line in
				# if we have a kernel update, we want to make it more visible
				Pk*)
					packages="%{F$COLOR_PACKAGE_IMPORTANT_FG}%{B$COLOR_PACKAGE_IMPORTANT_BG} ${package_count} %{B-}%{F-}"
					;;
				Pp*)
					packages="%{F$COLOR_PACKAGE_FG}%{B$COLOR_PACKAGE_BG} ${package_count} %{B-}%{F-}"
					;;
				*)
					packages=""
					;;
			esac
			;;
		X*)
			line_out=$(echo $line | cut -c 3-)
			case $line in
				XC*)
					if echo $line_out | grep -e "tun[0-9]" 2>/dev/null;
					then
						network="%{F$COLOR_NETWORK_TUN_FG}%{B$COLOR_NETWORK_TUN_BG} ${line_out} %{B-}%{F-}"
					else
						network="%{F$COLOR_NETWORK_NORMAL_FG}%{B$COLOR_NETWORK_NORMAL_BG} ${line_out} %{B-}%{F-}"
					fi
				;;
				XD*)
					network="%{F$COLOR_NETWORK_DIS_FG}%{B$COLOR_NETWORK_DIS_BG} ${line_out} %{B-}%{F-}"
				;;
			esac
			;;
		V*)
			if [[ ${line#?} -eq 0 ]];
			then
				volume="%{F$COLOR_VOLUME_OFF_FG}%{B$COLOR_VOLUME_OFF_BG} ${line#?}%% %{B-}%{F-}"
			else
				volume="%{F$COLOR_VOLUME_ON_FG}%{B$COLOR_VOLUME_ON_BG} ${line#?}%% %{B-}%{F-}"
			fi
			;;
		B*)
			percentage=$(echo $line | grep -oP '\d+(?=%)')
			if [[ $percentage -le 20 ]];
			then
				battery="%{F$COLOR_BATTERY_LOW_FG}%{B$COLOR_BATTERY_LOW_BG} ${line#?} %{B-}%{F-}"
			else
				battery="%{F$COLOR_BATTERY_NORMAL_FG}%{B$COLOR_BATTERY_NORMAL_BG} ${line#?} %{B-}%{F-}"
			fi
			;;
		H*)
			# hostname
			hostname="%{F$COLOR_HOSTNAME_FG}%{B$COLOR_HOSTNAME_BG} ${line#?} %{B-}%{F-}"
			;;
		S*)
			hour=$(echo "$line" | sed 's/.* \([0-9]*\).*/\1/')
			if [[ $hour -ge 22 ]] || [[ $hour -lt 9 ]];
			then
				sys_infos="%{f$COLOR_CLOCK_LATE_FG}%{b$COLOR_CLOCK_LATE_BG} ${line#?} %{b-}%{f-}"
			else
				sys_infos="%{f$COLOR_CLOCK_NORMAL_FG}%{b$COLOR_CLOCK_NORMAL_BG} ${line#?} %{b-}%{f-}"
			fi
			;;
		T*)
			# xtitle output
			title="%{F$COLOR_TITLE_FG}%{B$COLOR_TITLE_BG} ${line#?} %{B-}%{F-}"
			;;
		LOAD*)
			# load temp and load
			load_data=$(echo $line | cut -c5-)
			# http://stackoverflow.com/questions/10586153/split-string-into-an-array-in-bash
			IFS=' ' read -a arr_load_data <<< "$load_data"
			IFS='@' read -a arr_cpu_data <<< "$arr_load_data"

			COLOR_LOAD_HIGH_TEMP_BG=$_RED
			load_colour_bg="$COLOR_LOAD_NORMAL_TEMP_BG"

			load_temperature=$(egrep -o "[0-9]+" <<< "${arr_cpu_data[1]}")
			if [[ "$load_temperature" -ge "$TEMPERATURE_THRESHOLD" ]];
			then
				load_colour_bg="$COLOR_LOAD_HIGH_TEMP_BG"
			fi


			system_load_info="%{F$COLOR_TITLE_FG}%{B$load_colour_bg} $load_data %{B-}%{F-}"
			;;
		W*)
			# bspwm internal state
			wm_infos=""
			IFS=':'
			set -- ${line#?}
			while [ $# -gt 0 ] ; do
				item=$1
				name=${item#?}
				case $item in
					M*)
						# active monitor
						if [ $num_mon -gt 1 ] ; then
							wm_infos="$wm_infos %{F$COLOR_ACTIVE_MONITOR_FG}%{B$COLOR_ACTIVE_MONITOR_BG} ${name} %{B-}%{F-}  "
						fi
						;;
					m*)
						# inactive monitor
						if [ $num_mon -gt 1 ] ; then
							wm_infos="$wm_infos %{F$COLOR_INACTIVE_MONITOR_FG}%{B$COLOR_INACTIVE_MONITOR_BG} ${name} %{B-}%{F-}  "
						fi
						;;
					O*)
						# focused occupied desktop
						wm_infos="${wm_infos}%{F$COLOR_FOCUSED_OCCUPIED_FG}%{B$COLOR_FOCUSED_OCCUPIED_BG}%{U$COLOR_FOREGROUND}%{+u} ${name} %{-u}%{B-}%{F-}"
						;;
					F*)
						# focused free desktop
						wm_infos="${wm_infos}%{F$COLOR_FOCUSED_FREE_FG}%{B$COLOR_FOCUSED_FREE_BG}%{U$COLOR_FOREGROUND}%{+u} ${name} %{-u}%{B-}%{F-}"
						;;
					U*)
						# focused urgent desktop
						wm_infos="${wm_infos}%{F$COLOR_FOCUSED_URGENT_FG}%{B$COLOR_FOCUSED_URGENT_BG}%{U$COLOR_FOREGROUND}%{+u} ${name} %{-u}%{B-}%{F-}"
						;;
					o*)
						# occupied desktop
						wm_infos="${wm_infos}%{F$COLOR_OCCUPIED_FG}%{B$COLOR_OCCUPIED_BG} ${name} %{B-}%{F-}"
						;;
					f*)
						# free desktop
						wm_infos="${wm_infos}%{F$COLOR_FREE_FG}%{B$COLOR_FREE_BG} ${name} %{B-}%{F-}"
						;;
					u*)
						# urgent desktop
						wm_infos="${wm_infos}%{F$COLOR_URGENT_FG}%{B$COLOR_URGENT_BG} ${name} %{B-}%{F-}"
						;;
					L*)
						# layout
						wm_infos="$wm_infos  %{F$COLOR_LAYOUT_FG}%{B$COLOR_LAYOUT_BG} ${name} %{B-}%{F-}"
						;;
				esac
				shift
			done
			;;
	esac
	printf "%s\n" "%{l}${wm_infos}%{c}${title}%{r}${network}${system_load_info}${battery}${music}${volume}${hostname}${packages}${sys_infos}"
done
