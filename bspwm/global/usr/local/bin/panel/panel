#!/bin/bash

if [ $(pgrep -cx panel) -gt 1 ] ; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

battery () {
	if which acpi > /dev/null 2>&1;
	then
		while true;
		do
			DATA=$(acpi -b)

			remainder=$(echo $DATA | cut -d" " -f5)
			percent=$(echo $DATA | cut -d" " -f4 | sed 's/[,%]//g')
			percent_str="$percent%%"

			echo -n "B"
			echo $DATA | grep "Discharging" > /dev/null
			if [ $? -eq 0 ];
			then
			    echo "$percent_str $remainder"
			elif [ $percent -eq 100 ];
			then
				echo "$percent_str"
			else
			    echo "$percent_str +$remainder"
			fi
			sleep 10
		done
	fi
}
notify_network_loop () {
	while true;
	do
		notify_network
		sleep 5
	done
}

first_time () {
	sleep 1
	echo "H$(hostname)"
	echo "V$($HOME/bin/vol.sh get)"
}

packages_to_update () {
	# http://www.reddit.com/r/archlinux/comments/2xbf71/script_to_update_arch/coyolos
	while true;
	do
		echo "P$(checkupdates | wc -l)"
		sleep $((60*60*3))
	done
}

get_playing () {
	while true;
	do
		mpc.sh current
		sleep $((60*3))
	done
}

load_info () {
	while true;
	do
		cpu_temp=$(sensors|awk 'BEGIN{i=0;t=0;b=0}/id [0-9]/{b=$4};/Core/{++i;t+=$3}END{if(i>0){printf("%0.1f\n",t/i)}else{sub(/[^0-9.]/,"",b);print b}}')
		cpu_load=$(bc <<< $(ps -eo pcpu |grep -vE '^\s*(0.0|%CPU)' |sed -n '1h;$!H;$g;s/\n/ +/gp'))

		echo "CPU$(round $cpu_load)@$(round $cpu_temp)c"
		sleep 5
	done
}

round () {
	# http://unix.stackexchange.com/questions/131073/awk-printf-number-in-width-and-round-it-up
	awk "BEGIN{printf \"%.0f\n\", $1}"
}

bspc config top_padding $PANEL_HEIGHT
bspc control --subscribe > "$PANEL_FIFO" &
xtitle -sf 'T%s' > "$PANEL_FIFO" &
clock -sf 'S%a %H:%M' > "$PANEL_FIFO" &
battery > "$PANEL_FIFO" &
notify_network_loop > "$PANEL_FIFO" &
first_time > "$PANEL_FIFO" &
packages_to_update > "$PANEL_FIFO" &
get_playing > "$PANEL_FIFO" &
load_info > "$PANEL_FIFO" &

cat "$PANEL_FIFO" | panel_bar | lemonbar -g x$PANEL_HEIGHT -f "$PANEL_FONT_FAMILY" -F "$COLOR_FOREGROUND" -B "$COLOR_BACKGROUND" &

wait
