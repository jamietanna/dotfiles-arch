#!/bin/bash

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
. $DIR/panel_colors
. /etc/profile.d/bspwm_panel.sh

if [ $(pgrep -cx panel) -gt 1 ] ; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

battery () {
	# http://askubuntu.com/a/309146
	if [ -e "/sys/class/power_supply/BAT0" ];
	then
		DATA=$(acpi -b)

		remainder=$(echo $DATA | cut -d" " -f5)
		percent=$(echo $DATA | cut -d" " -f4 | sed 's/[,%]//g')
		percent_str="$percent%"

		echo -n "B"
		echo $DATA | grep "Discharging" > /dev/null
		if [ $? -eq 0 ];
		then
		    echo "$percent_str $remainder"
		elif [[ "$percent" -eq "100" ]];
		then
			echo "$percent_str"
		else
		    echo "$percent_str +$remainder"
		fi
		sleep 10
	fi
}

first_time () {
	sleep 1
	echo "H$(hostname)"
	echo "V$($HOME/bin/vol.sh get)"
}

packages_to_update () {
	# http://www.reddit.com/r/archlinux/comments/2xbf71/script_to_update_arch/coyolos
	while true;
	do
		~/bin/checkupdates.sh
		sleep $((60*60*3))
	done
}

main_loop () {
	while true;
	do
		battery
		notify_network.sh
		sleep 30
	done
}

mpc_loop () {
	while true;
	do
		out="M"

		mpc_status="$(mpc status)"

		if echo $mpc_status | grep "playing" 2>&1 > /dev/null;
		then
			out+="pl"
		elif echo $mpc_status | grep "paused" 2>&1 > /dev/null;
		then
			out+="pa"
		else
			out+="st"
		fi

		# this blocks until there is a change, which means we have much less
		# continually polling
		out+="$(mpc current --wait)"

		echo "$out"
	done
}

load_info () {
	while true;
	do
		cpu_temp=$(sensors|awk 'BEGIN{i=0;t=0;b=0}/id [0-9]/{b=$4};/Core/{++i;t+=$3}END{if(i>0){printf("%0.1f\n",t/i)}else{sub(/[^0-9.]/,"",b);print b}}')
		cpu_load=$(bc <<< $(ps -eo pcpu |grep -vE '^\s*(0.0|%CPU)' |sed -n '1h;$!H;$g;s/\n/ +/gp'))
		# http://stackoverflow.com/a/10586020
		mem_used=$(free | grep Mem | awk '{ print $3/$2 * 100.0 }')

		echo "LOAD$(round $cpu_load)%@$(round $cpu_temp)c $(round $mem_used)%"
		sleep 5
	done
}

round () {
	# http://unix.stackexchange.com/questions/131073/awk-printf-number-in-width-and-round-it-up
	awk "BEGIN{printf \"%.0f\n\", $1}"
}

bspc config top_padding $PANEL_HEIGHT
bspc subscribe report > "$PANEL_FIFO" &
xtitle -sf 'T%s' > "$PANEL_FIFO" &
clock -sf 'S%a %H:%M' > "$PANEL_FIFO" &
first_time > "$PANEL_FIFO" &
packages_to_update > "$PANEL_FIFO" &
load_info > "$PANEL_FIFO" &
main_loop > "$PANEL_FIFO" &
mpc_loop > "$PANEL_FIFO" &
. panel_colors

panel_bar < "$PANEL_FIFO" | lemonbar \
	-u "$PANEL_UNDERLINE_HEIGHT" \
	-n "$PANEL_WM_NAME" \
	-g x$PANEL_HEIGHT \
	-f "$PANEL_FONT_FAMILY" \
	-F "$(bar_color_fg COLOR_BAR)" \
	-B "$(bar_color_bg COLOR_BAR)" | \
	while read line; do
		eval "$line"
	done &

wait
