#!/bin/bash

if [ $(pgrep -cx panel) -gt 1 ] ; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

battery () {
	# http://askubuntu.com/a/309146
	if [ -e "/sys/class/power_supply/BAT0" ];
	then
		DATA=$(acpi -b)

		remainder=$(echo $DATA | cut -d" " -f5)
		percent=$(echo $DATA | cut -d" " -f4 | sed 's/[,%]//g')
		percent_str="$percent%%"

		echo -n "B"
		echo $DATA | grep "Discharging" > /dev/null
		if [ $? -eq 0 ];
		then
		    echo "$percent_str $remainder"
		elif [[ "$percent" -eq "100" ]];
		then
			echo "$percent_str"
		else
		    echo "$percent_str +$remainder"
		fi
		sleep 10
	fi
}

first_time () {
	sleep 1
	echo "H$(hostname)"
	echo "V$($HOME/bin/vol.sh get)"
}

packages_to_update () {
	# http://www.reddit.com/r/archlinux/comments/2xbf71/script_to_update_arch/coyolos
	while true;
	do
		echo "P$(checkupdates | wc -l)"
		sleep $((60*60*3))
	done
}

main_loop () {
	while true;
	do
		battery	
		mpc.sh current
		notify_network
		sleep 30
	done
}

bspc config top_padding $PANEL_HEIGHT
bspc control --subscribe > "$PANEL_FIFO" &
xtitle -sf 'T%s' > "$PANEL_FIFO" &
clock -sf 'S%a %H:%M' > "$PANEL_FIFO" &
first_time > "$PANEL_FIFO" &
packages_to_update > "$PANEL_FIFO" &

main_loop > "$PANEL_FIFO" &

. panel_colors

cat "$PANEL_FIFO" | panel_bar | lemonbar -g x$PANEL_HEIGHT -f "$PANEL_FONT_FAMILY" -F "$COLOR_FOREGROUND" -B "$COLOR_BACKGROUND" &

wait
