# vim: foldmethod=marker:foldlevel=0 textwidth=80 wrap
# -----------------------------------------------------------------------------
# .zshrc
# 	My configuration for Zsh
# -----------------------------------------------------------------------------
# Location: $HOME/.zshrc
# -----------------------------------------------------------------------------


# -----------------------------------------------------------------------------
# => Zsh Vi-Mode, via http://dougblack.io/words/zsh-vi-mode.html
# 	TODO describe
# -----------------------------------------------------------------------------
# {{{
# Allow us to use colours, as below
autoload -U colors && colors

# Use Vi-keybindings
bindkey -v
# Disable lag - 0.1s
export KEYTIMEOUT=1

# Set up a right prompt to display when we're in normal mode
function zle-line-init zle-keymap-select {
	VIM_PROMPT="%{$fg_bold[red]%} [% NORMAL ]% %{$reset_color%}"
	RPS1="${${KEYMAP/vicmd/$VIM_PROMPT}/(main|viins)/} $EPS1"
	zle reset-prompt
}
# Actually hook it in
zle -N zle-line-init
zle -N zle-keymap-select

# And allow us to reverse search history
bindkey '^r' history-incremental-search-backward
bindkey '^a' beginning-of-line
bindkey '^e' end-of-line
# }}}

# -----------------------------------------------------------------------------
# => Source external files containing aliases and functions
# -----------------------------------------------------------------------------
# {{{

# -----------------------------------------------------------------------------
# => Shell-agnostic
# -----------------------------------------------------------------------------
# {{{

local shell_helpers
set -A shell_helpers

shell_helpers+=($HOME/.githelpers)

# a collection of general-purpose shell functions
shell_helpers+=($HOME/.sh_functions)

# a collection of general-purpose aliases
shell_helpers+=($HOME/.sh_aliases)

# helper functions used to extract colours from my .Xresources, for use
# elsewhere
shell_helpers+=($HOME/.Xresourceshelper)

# }}}

# -----------------------------------------------------------------------------
# => Zsh-specific
# -----------------------------------------------------------------------------
# {{{
# Code for `wksp`, including
shell_helpers+=($HOME/.wksp.zsh)
# }}}

# and finally, source them

for shell_file in $shell_helpers;
do
	. "$shell_file"
done

# }}}

# -----------------------------------------------------------------------------
# => Use customised dircolors
# 	Use our own, preferred dircolors, and make sure that zsh uses them, too
# -----------------------------------------------------------------------------
# {{{
# don't like `eval` but unfortunately we have to use it here
eval $(dircolors $HOME/.dir_colors)
# ensure zsh's autocomplete uses the same colours as our `LS_COLORS`
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
# }}}


# -----------------------------------------------------------------------------
# => GRML-specific settings
# -----------------------------------------------------------------------------
# {{{
# Workspaces {{{
grml_theme_add_token path_wksp -f path_wksp_prompt '%B' '%b'
grml_theme_add_token wksp_indicator -f workspace_prompt '%B%F{red}' '%f%b'
# }}}

# Jobs {{{
function jobs_count () {
	local count="$(jobs | wc -l)"
	if [[ "$count" -gt "0" ]]; then
		REPLY="${count}%% "
	else
		REPLY=""
	fi
}

grml_theme_add_token jobs_indicator -f jobs_count '%B%F{magenta}' '%f%b'
# }}}



zstyle ':prompt:grml:left:setup' items rc jobs_indicator change-root \
	user at host wksp_indicator path_wksp vcs percent
# }}}

# -----------------------------------------------------------------------------
# => zsh-specific settings
# -----------------------------------------------------------------------------
# {{{
# Fuzzy completion matching via http://superuser.com/a/815317
zstyle ':completion:*' matcher-list '' \
  'm:{a-z\-}={A-Z\_}' \
  'r:[^[:alpha:]]||[[:alpha:]]=** r:|=* m:{a-z\-}={A-Z\_}' \
  'r:[[:ascii:]]||[[:ascii:]]=** r:|=* m:{a-z\-}={A-Z\_}'
# }}}




